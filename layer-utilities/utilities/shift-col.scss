@mixin shift-col {
	$breakpoints-name-list: map-keys($breakpoints);

	.shift-col-left {
		@for $index from 1 through length($breakpoints) {
			$cols-count: nth(map-get($col-media-params, nth($breakpoints-name-list, -$index)), 1);

			@if nth($breakpoints-name-list, -$index) == "xxl" {
				@for $col-num from 0 through $cols-count {
					&-#{$col-num} {
						@if $col-num == 0 {
							margin-inline: 0;
						}

						@else {
							margin-inline: calc(-1 * (100% / #{$cols-count} * #{$col-num})) calc(100% / #{$cols-count} * #{$col-num});
						}
					}
				}
			}

			@else if nth($breakpoints-name-list, -$index) != "xxl" {
				@include media(nth($breakpoints-name-list, -$index)) {
					@for $col-num from 0 through $cols-count {
						&-#{$col-num}\@#{classMedia(nth($breakpoints-name-list, -$index))} {
							@if $col-num == 0 {
								margin-inline: 0;
							}

							@else {
								margin-inline: calc(-1 * (100% / #{$cols-count} * #{$col-num})) calc(100% / #{$cols-count} * #{$col-num});
							}
						}
					}
				}
			}
		}
	}

	.shift-col-right {
		@for $index from 1 through length($breakpoints) {
			$cols-count: nth(map-get($col-media-params, nth($breakpoints-name-list, -$index)), 1);

			@if nth($breakpoints-name-list, -$index) == "xxl" {
				@for $col-num from 0 through $cols-count {
					&-#{$col-num} {
						@if $col-num == 0 {
							margin-inline: 0;
						}

						@else {
							margin-inline: calc(100% / #{$cols-count} * #{$col-num}) calc(-1 * (100% / #{$cols-count} * #{$col-num}));
						}
					}
				}
			}

			@else if nth($breakpoints-name-list, -$index) != "xxl" {
				@include media(nth($breakpoints-name-list, -$index)) {
					@for $col-num from 0 through $cols-count - 1 {
						&-#{$col-num}\@#{classMedia(nth($breakpoints-name-list, -$index))} {
							@if $col-num == 0 {
								margin-inline: 0;
							}

							@else {
								margin-inline: calc(100% / #{$cols-count} * #{$col-num}) calc(-1 * (100% / #{$cols-count} * #{$col-num}));
							}
						}
					}
				}
			}
		}
	}
}

@include shift-col;