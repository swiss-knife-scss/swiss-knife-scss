@mixin col {
	$breakpoints-name-list: map-keys($breakpoints);

	.col {
		@for $index from 1 through length($breakpoints) {
			$cols-count: nth(map-get($col-media-params, nth($breakpoints-name-list, -$index)), 1);

			@if nth($breakpoints-name-list, -$index) == "xxl" {
				@for $colNum from 1 through $cols-count {
					&-#{$colNum} {
						flex: 0 0 calc(100% / #{$cols-count} * #{$colNum});

						max-width: calc(100% / #{$cols-count} * #{$colNum});
					}
				}
			}

			@else if nth($breakpoints-name-list, -$index) != "xxl" {
				@include media(nth($breakpoints-name-list, -$index)) {

					@for $colNum from 1 through $cols-count {
						&-#{$colNum}\@#{classMedia(nth($breakpoints-name-list, -$index))} {
							flex: 0 0 calc(100% / #{$cols-count} * #{$colNum});

							max-width: calc(100% / #{$cols-count} * #{$colNum});
						}
					}
				}
			}
		}
	}

	.offset {
		@for $index from 1 through length($breakpoints) {
			$cols-count: nth(map-get($col-media-params, nth($breakpoints-name-list, -$index)), 1);

			@if nth($breakpoints-name-list, -$index) == "xxl" {
				@for $colNum from 0 through $cols-count - 1 {
					&-#{$colNum} {
						@if $colNum == 0 {
							margin-left: 0;
						}

						@else {
							margin-left: calc(100% / #{$cols-count} * #{$colNum});
						}
					}
				}
			}

			@else if nth($breakpoints-name-list, -$index) != "xxl" {
				@include media(nth($breakpoints-name-list, -$index)) {
					@for $colNum from 0 through $cols-count - 1 {
						&-#{$colNum}\@#{classMedia(nth($breakpoints-name-list, -$index))} {
							@if $colNum == 0 {
								margin-left: 0;
							}

							@else {
								margin-left: calc(100% / #{$cols-count} * #{$colNum});
							}
						}
					}
				}
			}
		}
	}
}

@mixin row {
	$breakpoints-name-list: map-keys($breakpoints);

	.row {
		@for $index from 1 through length($breakpoints) {

			@if nth($breakpoints-name-list, -$index) == "xxl" {
				display: flex;
				flex-wrap: wrap;

				@if length(map-get($col-media-params, nth($breakpoints-name-list, -$index))) == 2 {
					$row-spacing: calc(nth(map-get($col-media-params, nth($breakpoints-name-list, -$index)), 2) / 2);

					margin-inline: #{$row-spacing * -1}px;

					& > * {
						width: 100%;
						padding-inline: #{$row-spacing}px;
					}
				}
			}

			@else if nth($breakpoints-name-list, -$index) != "xxl" {
				@include media(nth($breakpoints-name-list, -$index)) {
					@if length(map-get($col-media-params, nth($breakpoints-name-list, -$index))) == 2 {
						$row-spacing: calc(nth(map-get($col-media-params, nth($breakpoints-name-list, -$index)), 2) / 2);

						margin-inline: #{$row-spacing * -1}px;

						& > * {
							padding-inline: #{$row-spacing}px;
						}
					}
				}
			}
		}
	}
}